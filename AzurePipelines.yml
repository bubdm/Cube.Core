# --------------------------------------------------------------------------- #
# common
# --------------------------------------------------------------------------- #
trigger:
    - master
pool:
    vmImage: 'VS2017-Win2016'

# --------------------------------------------------------------------------- #
# variables
# --------------------------------------------------------------------------- #
variables:
    PROJECT_NAME:       'Cube.Core'
    PROJECT_PLATFORM:   'Any CPU'
    PROJECT_CONFIG:     'Release'
    PROJECT_BIN:        'bin\Any CPU\Release\net45'
    TEST_TOOL:          '..\packages\OpenCover.4.7.922\tools\OpenCover.Console.exe'
    TEST_CORETOOL:      '..\packages\NUnit.ConsoleRunner.3.10.0\tools\nunit3-console.exe'
    TEST_RESULTS:       'TestResults'
    TEST_COVERAGE:      'CoverResults.xml'

# --------------------------------------------------------------------------- #
# steps
# --------------------------------------------------------------------------- #
steps:
- task: NuGetToolInstaller@0
  inputs:
    versionSpec: '>= 4.9'
  displayName: 'Use NuGet 4.9 or later'

- task: UseRubyVersion@0
  inputs:
    versionSpec: '>= 2.4'
  displayName: 'Use Ruby 2.4 or later'

- script: rake restore
  displayName: 'NuGet restore'

- task: VSBuild@1
  inputs:
    solution: '$(PROJECT_NAME).sln'
    platform: '$(PROJECT_PLATFORM)'
    configuration: '$(PROJECT_CONFIG)'
  displayName: 'Build solution'

- script: >-
    "$(TEST_TOOL)"
    -log:Error
    -register:user
    -target:"$(TEST_CORETOOL)"
    -targetargs:"$(PROJECT_NAME).Tests.dll"
    -targetdir:"Tests\$(PROJECT_BIN)"
    -returntargetcode
    -hideskipped:All
    -output:"$(TEST_COVERAGE)"
    -filter:"+[Cube*]* -[*]*NativeMethods -[*]*Properties.*"
  displayName: 'Run tests via OpenCover and NUnit'

- task: CopyFiles@2
  inputs:
    contents: 'Tests\**\*.log'
    targetFolder: '$(TEST_RESULTS)'
    overWrite: true
    flattenFolders: true
  displayName: 'Copy log files for testing'

- task: CopyFiles@2
  inputs:
    contents: '$(TEST_COVERAGE)'
    targetFolder: '$(TEST_RESULTS)'
    overWrite: true
  displayName: 'Copy coverage results'

- task: ArchiveFiles@2
  inputs:
    archiveFile: '$(Build.ArtifactStagingDirectory)\$(TEST_RESULTS).zip'
    rootFolderOrFile: '$(TEST_RESULTS)'
    archiveType: 'zip'
    includeRootFolder: true
    replaceExistingArchive: true
  displayName: 'Archive test results'

- task: NuGetCommand@2
  inputs:
    command: 'pack'
    packagesToPack: 'Libraries\$(PROJECT_NAME).csproj'
    configuration: '$(PROJECT_CONFIG)'
  displayName: 'Create NuGet package'

- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'NUnit'
    testResultsFiles: '**/TestResult.xml'
  displayName: 'Publish test results'

- task: PublishPipelineArtifact@0
  inputs:
    artifactName: '$(PROJECT_NAME)'
    targetPath: '$(Build.ArtifactStagingDirectory)'
  displayName: 'Publish artifacts'